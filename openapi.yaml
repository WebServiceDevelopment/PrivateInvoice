---

openapi: 3.0.3
info:
  version: 1.0.0
  title: PrivateInvoice
  description: >-
    PrivateInvoice API
  termsOfService: 'http://swagger.io/terms/'
  contact:
    name: Swagger API Team
    email: apiteam@swagger.io
    url: 'http://swagger.io'
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'

components:
  securitySchemes:
    basicAuth: 
      type: http
      scheme: basic

security:
  - basicAuth: []

tags:
  - name: "Contacts"
    description: "Paths related to handling contacts"
  - name: "Invoice"
    description: "Paths related to handling invoices"
  - name: "Invite"
    description: "Paths related to handling invites"
  - name: "Session"
    description: "Paths related to handling logins and sessions"
  - name: "Settings"
    description: "Paths related to handling settings"
  - name: "Trace"
    description: "Paths related to sending and receiving presentations"
  - name: "Tray"
    description: "Paths related to handling document tray"
  - name: "TrayArchive"
    description: "Paths related to handling document trayArchive"
  - name: "TrayDraft"
    description: "Paths related to handling document trayDraft"
  - name: "Wallet"
    description: "Paths related to handling wallets"

servers:
  - url: 'http://localhost:3000'

paths:
  #1.1 /api/contacts
  #require('./routes/contacts.js');

  #1.1.1
  /api/contacts/generate:
    post:
      description: >-
        \#1.1.1 This end point will generate a Verifiable Business Card
        that is signed with your contact details for the current date and
        time. This Verifiable Business Card will be returned as a JSON
        file that can be given to someone else to add to their Private Invoice
        contacts.

        The parameters to this end point provide the context of what relationship
        will be included in the Verifiable Business Card for contact details.
        These include where the contact will be a Buyer, Seller, or a Partner,
        the number of uses, and then expiration date for the Verifiable Business Card.
      operationId: contacts_generate
      tags:
        - "Contacts"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/contacts/schemas/Request_generate'
      responses:
        '200':
          description: generate response
          content:
            application/json:
              schema:
                $ref: '#/contacts/schemas/Responses_generate'

  #1.1.2
  /api/contacts/add:
    post:
      description: >-
        \#1.1.2 This end point will add a contact to your database
        when provided with a Verifiable Business Card. For example
        Alice exports a Verifiable Business Card and sends it to Bob.
        This end point is intended for Bob to POST the contents of the
        Verifiable Business Card to his node to add Alice as a contact.
      operationId: contacts_add
      tags:
        - "Contacts"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/contacts/schemas/Request_add'
      responses:
        '200':
          description: add response
          content:
            application/json:
              schema:
                $ref: '#/contacts/schemas/Responses_add'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/contacts/schemas/Error_add'

  #1.1.3
  /api/contacts/getContactList:
    post:
      description: \#1.1.3 contacts getContactList
      operationId: contacts_getContactList
      tags:
        - "Contacts"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/contacts/schemas/Request_getContactList'
      responses:
        '200':
          description: getContactList response
          content:
            application/json:
              schema:
                $ref: '#/contacts/schemas/Responses_getContactList'

  #2.1
  #require('./routes/buyer_invoice.js');
  #2.1.1
  /api/invoice/returnToSender:
    post:
      description: \#2.1.1 invoice returnToSender 
      operationId: invoice_returnToSender
      tags:
        - "Invoice"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/invoice/schemas/Request_returnToSender'
      responses:
        '200':
          description: returnToSender response
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Responses_returnToSender'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Error_returnToSender'

  #2.1.2
  /api/invoice/confirm:
    post:
      description: \#2.1.2 invoice confirm 
      operationId: invoice_confirm
      tags:
        - "Invoice"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/invoice/schemas/Request_confirm'
      responses:
        '200':
          description: confirm response
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Responses_confirm'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Error_confirm'

  #2.1.3
  /api/invoice/unconfirm:
    post:
      description: \#2.1.3 invoice unconfirm 
      operationId: invoice_unconfirm
      tags:
        - "Invoice"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/invoice/schemas/Request_confirm'
      responses:
        '200':
          description: unconfirm response
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Responses_unconfirm'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Error_unconfirm'

  #2.1.4
  /api/invoice/makePayment:
    post:
      description: \#2.1.4 invoice makePayment 
      operationId: invoice_makePayment
      tags:
        - "Invoice"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/invoice/schemas/Request_makePayment'
      responses:
        '200':
          description: makePayment response
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Responses_makePayment'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Error_makePayment'


  #2.2
  #require('./routes/buyer_invoice_document.js');
  #2.2.1
  /api/invoice/getDocumentBuyer:
    post:
      description: \#2.2.1 invoice getDocumentBuyer 
      operationId: invoice_getDocumentBuyer
      tags:
        - "Invoice"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/invoice/schemas/Request_getDocumentBuyer'
      responses:
        '200':
          description: buyer_invoice_document response
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Responses_getDocumentBuyer'


  #2.2.2
  /api/invoice/getDocumentSeller:
    post:
      description: \#2.2.2 invoice getDocumentSeller 
      operationId: invoice_getDocumentSeller
      tags:
        - "Invoice"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/invoice/schemas/Request_getDocumentSeller'
      responses:
        '200':
          description: getDocumentSeller response
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Responses_getDocumentBuyer'

  #2.2.3
  /api/invoice/getArchiveDocumentBuyer:
    post:
      description: \#2.2.3 invoice getArchiveDocumentBuyer 
      operationId: invoice_getArchiveDocumentBuyer
      tags:
        - "Invoice"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/invoice/schemas/Request_getArchiveDocumentBuyer'
      responses:
        '200':
          description: getArchiveDocumentBuyer response
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Responses_getArchiveDocumentBuyer'


  #2.2.4
  /api/invoice/getArchiveDocumentSeller:
    post:
      description: \#2.2.4 invoice getArchiveDocumentSeller 
      operationId: invoice_getArchiveDocumentSeller
      tags:
        - "Invoice"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/invoice/schemas/Request_getArchiveDocumentSeller'
      responses:
        '200':
          description: getArchiveDocumentSeller response
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Responses_getArchiveDocumentBuyer'


  #2.3
  #require('./routes/seller_invoice_archive.js');

  #2.3.1
  /api/invoice/sellerArchive:
    post:
      description: \#2.3.1 invoice sellerArchive 
      operationId: invoice_sellerArchive
      tags:
        - "Invoice"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/invoice/schemas/Request_sellerArchive'
      responses:
        '200':
          description: sellerArchive response
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Responses_sellerArchive'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Error_sellerArchive'


  #2.4
  #require('./routes/seller_invoice_document.js');

  #2.4.1
  /api/invoice/update:
    post:
      description: \#2.4.1 invoice update 
      operationId: invoice_update
      tags:
        - "Invoice"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/invoice/schemas/Request_update'
      responses:
        '200':
          description: Update response
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Responses_update'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Error_update'

  #2.4.2
  /api/invoice/getDraftDocument:
    post:
      description: \#2.4.2 invoice getDraftDocument
      operationId: invoice_getDraftDocument
      tags:
        - "Invoice"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/invoice/schemas/Request_getDraftDocument'
      responses:
        '200':
          description: getDraftDocument response
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Responses_getDraftDocument'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Error_getDraftDocument'

  #2.4.3
  /api/invoice/getDocument:
    post:
      description: \#2.4.3 invoice getDocument
      operationId: invoice_getDocument
      tags:
        - "Invoice"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/invoice/schemas/Request_getDocument'
      responses:
        '200':
          description: getDocument response
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Responses_getDocument'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Error_getDocument'

  #2.4.4
  /api/invoice/getArchiveDocument:
    post:
      description: \#2.4.4 invoice getArchiveDocument
      operationId: invoice_getArchiveDocument
      tags:
        - "Invoice"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/invoice/schemas/Request_getArchiveDocument'
      responses:
        '200':
          description: getArchiveDocument response
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Responses_getArchiveDocument'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Error_getArchiveDocument'

  #2.4.5
  /api/invoice/create:
    post:
      description: \#2.4.5 invoice create
      operationId: invoice_create
      tags:
        - "Invoice"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/invoice/schemas/Request_create'
      responses:
        '200':
          description: create response
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Responses_create'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Error_create'

  #2.5
  #require('./routes/seller_invoice.js');
  
  #2.5.1
  /api/invoice/send:
    post:
      description: \#2.5.1 invoice send
      operationId: invoice_send
      tags:
        - "Invoice"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/invoice/schemas/Request_send'
      responses:
        '200':
          description: send response
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Responses_send'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Error_send'

  #2.5.2
  /api/invoice/recreate:
    post:
      description: \#2.5.2 invoice recreate
      operationId: invoice_recreate
      tags:
        - "Invoice"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/invoice/schemas/Request_recreate'
      responses:
        '200':
          description: recreate response
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Responses_recreate'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Error_recreate'

  #2.5.3
  /api/invoice/withdraw:
    post:
      description: \#2.5.3 invoice withdraw
      operationId: invoice_withdraw
      tags:
        - "Invoice"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/invoice/schemas/Request_withdraw'
      responses:
        '200':
          description: withdraw response
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Responses_withdraw'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Error_withdraw'


  #2.6
  #require('./routes/seller_invoice_trash.js');

  #2.6.1
  /api/invoice/trashDraft:
    post:
      description: \#2.6.1 invoice trashDraft
      operationId: invoice_trashDraft
      tags:
        - "Invoice"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/invoice/schemas/Request_trashDraft'
      responses:
        '200':
          description: trashDraft response
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Responses_trashDraft'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Error_trashDraft'

  #2.6.2
  /api/invoice/trash:
    post:
      description: \#2.6.2 invoice trash
      operationId: invoice_trash
      tags:
        - "Invoice"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/invoice/schemas/Request_trash'
      responses:
        '200':
          description: trash response
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Responses_trash'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Error_trash'


  #2.7
  #require('./routes/softDelete.js');

  #2.7.1
  /api/invoice/softDeleteSeller:
    post:
      description: \#2.7.1 invoice softDeleteSeller
      operationId: invoice_softDeleteSeller
      tags:
        - "Invoice"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/invoice/schemas/Request_softDeleteSeller'
      responses:
        '200':
          description: softDeleteSeller response
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Responses_softDeleteSeller'

  #2.7.2
  /api/invoice/softDeleteBuyer:
    post:
      description: \#2.7.1 invoice softDeleteBuyer
      operationId: invoice_softDeleteBuyer
      tags:
        - "Invoice"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/invoice/schemas/Request_softDeleteBuyer'
      responses:
        '200':
          description: softDeleteBuyer response
          content:
            application/json:
              schema:
                $ref: '#/invoice/schemas/Responses_softDeleteBuyer'


  #3.1
  #require('./routes/invite.js');
  
  #3.1.1
  /api/invite/create:
    post:
      description: \#3.1.1 invite create
      operationId: invite_create
      tags:
        - "Invite"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/invite/schemas/Request_create'
      responses:
        '200':
          description: create response
          content:
            application/json:
              schema:
                $ref: '#/invite/schemas/Responses_create'

  #3.1.2
  /api/invite/list:
    post:
      description: \#3.1.2 invite list
      operationId: invite_list
      tags:
        - "Invite"
      parameters:
        - in: "body"
          name: "body"

      responses:
        '200':
          description: list response
          content:
            application/json:
              schema:
                $ref: '#/invite/schemas/Responses_list'

  #3.1.3
  /api/invite/submit:
    post:
      description: \#3.1.3 invite submit
      operationId: invite_submit
      tags:
        - "Invite"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/invite/schemas/Request_submit'
      responses:
        '200':
          description: submit response
          content:
            application/json:
              schema:
                $ref: '#/invite/schemas/Responses_submit'

  #3.1.4
  /api/invite/contacts:
    post:
      description: \#3.1.4 invite contacts
      operationId: invite_contacts
      tags:
        - "Invite"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/invite/schemas/Request_contacts'
      responses:
        '200':
          description: contacts response
          content:
            application/json:
              schema:
                $ref: '#/invite/schemas/Responses_contacts'

  #3.1.5
  /api/invite/status:
    post:
      description: \#3.1.5 invite status
      operationId: invite_status
      tags:
        - "Invite"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/invite/schemas/Request_status'
      responses:
        '200':
          description: status response
          content:
            application/json:
              schema:
                $ref: '#/invite/schemas/Responses_status'

  #3.1.6
  /api/invite/remove:
    post:
      description: \#3.1.6 invite remove
      operationId: invite_remove
      tags:
        - "Invite"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/invite/schemas/Request_remove'
      responses:
        '200':
          description: remove response
          content:
            application/json:
              schema:
                $ref: '#/invite/schemas/Responses_remove'

  #4.1
  #require('./routes/seller_message.js');
  #/api/message:
  #  post:


  #4.2
  #require('./routes/buyer_invoice_archive.js');
  #/api/message:
  #  post:


  #4.3
  #require('./routes/buyer_invoice_trash.js');
  #/api/message:
  #  post:


  #4.4
  #require('./routes/buyer_message.js');
  #/api/message:
  #  post:


  #4.5
  #require('./routes/contact_message.js');
  #/api/message:
  #  post:


  #5.1
  #require('./routes/presentations.js');
  /api/presentations/available:
    post:
      tags:
        - "Trace"
      security: {}


  #6.1
  #require('./routes/session.js');

  #6.1.1
  /api/session/logout:
    get:
      description: \#6.1.1 session logout
      operationId: session_logout
      tags:
        - "Session"
      responses:
        307:
          description: Redirect
          responseParameters:
            - in: query
              name: status
              description: the status of the instalation
              schema:
                oneOf:
                  - type: string
                    example: success
                    description: When the installation was successful
                  - type: string
                    example: error
                    description: When the installation was erroneous
          headers:
            location:
              description: Setup state based redirect
              schema:
                oneOf:
                  - type: string
                    description: If setup is done and valid for installation id, will
                      redirect to given redirect url
                  - type: string
                    description: If no setup exist for installation id, will redirect to
                      SumUp oauth page
                  - type: string
                    description: If error during authorization with SumUpl, e.g. non
                      matching editions, will redirect to a setup page for
                      further user action

  #6.1.2
  /api/session/check:
    get:
      description: >-
        The purpose of this end point is to provide a server-side call that will
        allow the client to get information about what session information is availble.
      tags:
        - "Session"
      responses:
        '200':
          description: >-
            If you have an active session, the response will show your session details
          content:
            application/json:
              schema:
                $ref: '#/session/schemas/Responses_check'

  #6.1.3
  /api/session/updateCompany:
    post:
      description: \#6.1.3 session updateCompany
      operationId: session_logout
      tags:
        - "Session"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/session/schemas/Request_updateCompany'
      responses:
        '200':
          description: logout response
          content:
            application/json:
              schema:
                $ref: '#/session/schemas/Responses_updateCompany'

  #6.1.4
  /api/session/updateProfile:
    post:
      description: \#6.1.4 session updateProfile
      operationId: session_updateProfile
      tags:
        - "Session"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/session/schemas/Request_updateProfile'
      responses:
        '200':
          description: updateProfile response
          content:
            application/json:
              schema:
                $ref: '#/session/schemas/Responses_updateProfile'

  #6.1.5
  /api/session/login:
    post:
      description: \#6.1.5 session login
      operationId: session_login
      tags:
        - "Session"
      requestBody:
        description: Parameters for logging in
        required: true
        content:
          application/json:
            schema:
              $ref: '#/session/schemas/Request_login'
      responses:
        '200':
          description: login response
          content:
            application/json:
              schema:
                $ref: '#/session/schemas/Responses_login'
      security: {}

  #6.1.6
  /api/session/signup:
    post:
      description: \#6.1.6 session signup
      operationId: session_signup
      tags:
        - "Session"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/session/schemas/Request_signup'
      responses:
        '200':
          description: signup response
          content:
            application/json:
              schema:
                $ref: '#/session/schemas/Responses_signup'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/session/schemas/Error_signup'
      security: {}


  #7.1
  #require('./routes/settings.js');

  #7.1.1
  /api/settings/setProfileImage:
    post:
      description: #7.1.1 settings setProfileImage
      operationId: settings_setProfileImage
      tags:
        - "Settings"
      parameters:
        - in: "body"
          required: true
          name: "body"
          schema:
            $ref: '#/settings/schemas/Request_setProfileImage'
      responses:
        '200':
          description: setProfileImage response
          content:
            application/json:
              schema:
                $ref: '#/settings/schemas/Responses_setProfileImage'

  #7.1.2
  /api/settings/setCompanyLogo:
    post:
      description: #7.1.2 settings setCompanyLogo
      operationId: settings_setCompanyLogo
      tags:
        - "Settings"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/settings/schemas/Request_setCompanyLogo'
      responses:
        '200':
          description: setCompanyLogo response
          content:
            application/json:
              schema:
                $ref: '#/settings/schemas/Responses_setCompanyLogo'

  #7.1.3
  /api/settings/getProfileImage:
    post:
      description: #7.1.3 settingd getProfileImage
      operationId: settings_getProfileImage
      tags:
        - "Settings"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/settings/schemas/Request_getProfileImage'
      responses:
        '200':
          description: getProfileImage response
          content:
            application/json:
              schema:
                $ref: '#/settings/schemas/Responses_getProfileImage'

  #7.1.4
  /api/settings/getCompanyLogo:
    post:
      description: #7.1.4 settings getCompanyLogo
      operationId: settings_getCompanyLogo
      tags:
        - "Settings"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/settings/schemas/Request_getCompanyLogo'
      responses:
        '200':
          description: getCompanyLogo response
          content:
            application/json:
              schema:
                $ref: '#/settings/schemas/Responses_getCompanyLogo'


  #8.1
  #require('./routes/test.js');
  #/api/test:
  #  post:


  #9.1
  #require('./routes/tray.js');

  #9.1.1
  /api/tray/getCountBuyer:
    post:
      description: \#9.1.1 tray getCountBuyer
      operationId: tray_getCountBuyer
      tags:
        - "Tray"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/tray/schemas/Request_getCountBuyer'
      responses:
        '200':
          description: getCountBuyer response
          content:
            application/json:
              schema:
                $ref: '#/tray/schemas/Responses_getCountBuyer'

  #9.1.2
  /api/tray/getCountSeller:
    post:
      description: \#9.1.2 tray getCountSeller
      operationId: tray_getCountSeller
      tags:
        - "Tray"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/tray/schemas/Request_getCountSeller'
      responses:
        '200':
          description: getCountSeller response
          content:
            application/json:
              schema:
                $ref: '#/tray/schemas/Responses_getCountSeller'

  #9.1.3
  /api/tray/getFolderBuyer:
    post:
      description: \#9.1.3 tray getFolderBuyer
      operationId: tray_getFolderBuyer
      tags:
        - "Tray"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/tray/schemas/Request_getFolderBuyer'
      responses:
        '200':
          description: getFolderBuyer response
          content:
            application/json:
              schema:
                $ref: '#/tray/schemas/Responses_getFolderBuyer'

  #9.1.4
  /api/tray/getFolderSeller:
    post:
      description: \#9.1.4 tray getFolderSeller
      operationId: tray_getFolderSeller
      tags:
        - "Tray"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/tray/schemas/Request_getFolderSeller'
      responses:
        '200':
          description: getFolderSeller response
          content:
            application/json:
              schema:
                $ref: '#/tray/schemas/Responses_getFolderSeller'

  #9.1.5
  /api/tray/getTotalBuyer:
    post:
      description: \#9.1.5 tray getTotalBuyer
      operationId: tray_getTotalBuyer
      tags:
        - "Tray"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/tray/schemas/Request_getTotalBuyer'
      responses:
        '200':
          description: getTotalBuyer response
          content:
            application/json:
              schema:
                $ref: '#/tray/schemas/Responses_getTotalBuyer'

  #9.1.6
  /api/tray/getTotalSeller:
    post:
      description: \#9.1.6 tray getTotalSeller
      operationId: tray_getTotalSeller
      tags:
        - "Tray"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/tray/schemas/Request_getTotalSeller'
      responses:
        '200':
          description: getTotalSeller response
          content:
            application/json:
              schema:
                $ref: '#/tray/schemas/Responses_getTotalSeller'

  #10.1
  #require('./routes/tray_archive.js');

  #10.1.1
  /api/trayArchive/getCountBuyer:
    post:
      description: \#10.1.1 trayArchive getCountBuyer
      operationId: trayArchive_getCountBuyer
      tags:
        - "TrayArchive"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/trayArchive/schemas/Request_getCountBuyer'
      responses:
        '200':
          description: getCountBuyer response
          content:
            application/json:
              schema:
                $ref: '#/trayArchive/schemas/Responses_getCountBuyer'

  #10.1.2
  /api/trayArchive/getCountSeller:
    post:
      description: \#10.1.2 trayArchive getCountSeller
      operationId: trayArchive_getCountSeller
      tags:
        - "TrayArchive"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/trayArchive/schemas/Request_getCountSeller'
      responses:
        '200':
          description: getCountSeller response
          content:
            application/json:
              schema:
                $ref: '#/trayArchive/schemas/Responses_getCountSeller'

  #10.1.3
  /api/trayArchive/getFolderBuyer:
    post:
      description: \#10.1.3 trayArchive getFolderBuyer
      operationId: trayArchive_getFolderBuyer
      tags:
        - "TrayArchive"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/trayArchive/schemas/Request_getFolderBuyer'
      responses:
        '200':
          description: getFolderBuyer response
          content:
            application/json:
              schema:
                $ref: '#/trayArchive/schemas/Responses_getFolderBuyer'

  #10.1.4
  /api/trayArchive/getFolderSeller:
    post:
      description: \#10.1.4 trayArchive getFolderSeller
      operationId: trayArchive_getFolderSeller
      tags:
        - "TrayArchive"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/trayArchive/schemas/Request_getFolderSeller'
      responses:
        '200':
          description: getFolderSeller response
          content:
            application/json:
              schema:
                $ref: '#/trayArchive/schemas/Responses_getFolderSeller'

  #10.1.5
  /api/trayArchive/getTotalBuyer:
    post:
      description: \#10.1.5 trayArchive getTotalBuyer
      operationId: trayArchive_getTotalBuyer
      tags:
        - "TrayArchive"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/trayArchive/schemas/Request_getTotalBuyer'
      responses:
        '200':
          description: getTotalSeller response
          content:
            application/json:
              schema:
                $ref: '#/trayArchive/schemas/Responses_getTotalBuyer'

  #10.1.6
  /api/trayArchive/getTotalSeller:
    post:
      description: \#10.1.6 trayArchive getTotalSeller
      operationId: trayArchive_getTotalSeller
      tags:
        - "TrayArchive"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/trayArchive/schemas/Request_getTotalSeller'
      responses:
        '200':
          description: getTotalSeller response
          content:
            application/json:
              schema:
                $ref: '#/trayArchive/schemas/Responses_getTotalSeller'


  #11.1
  #require('./routes/seller_tray_drafts.js');
  /api/trayDrafts:

  #11.1.1
  /api/trayDraft/getCountSeller:
    post:
      description: \#11.1.1 trayDraft getCountSeller
      operationId: trayDraft
      tags:
        - "TrayDraft"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/trayDraft/schemas/Request_getCountSeller'
      responses:
        '200':
          description: getCountSeller response
          content:
            application/json:
              schema:
                $ref: '#/trayDraft/schemas/Responses_getCountSeller'

  #11.1.2
  /api/trayDraft/getFolderSeller:
    post:
      description: \#11.1.2 trayDraft getFolderSeller
      operationId: trayDraft
      tags:
        - "TrayDraft"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/trayDraft/schemas/Request_getFolderSeller'
      responses:
        '200':
          description: getFolderSeller response
          content:
            application/json:
              schema:
                $ref: '#/trayDraft/schemas/Responses_getFolderSeller'

  #11.1.3
  /api/trayDraft/getTotalSeller:
    post:
      description: \#11.1.3 trayDraft getTotalSeller
      operationId: trayDraft
      tags:
        - "TrayDraft"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/trayDraft/schemas/Request_getTotalSeller'
      responses:
        '200':
          description: getTotalSeller response
          content:
            application/json:
              schema:
                $ref: '#/trayDraft/schemas/Responses_getTotalSeller'


  #12.1
  #require('./routes/wallet.js');
  #call by ActionWidget.js 

  #12.1.1
  /api/wallet/getReceiptInResentActivity: 
    post:
      description: \#12.1.1 wallet getReceiptInResentActivity
      operationId: wallet_getReceiptInResentActivity
      tags:
        - "Wallet"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/wallet/schemas/Request_getReceiptInResentActivity'
      responses:
        '200':
          description: getReceiptInResentActivity response
          content:
            application/json:
              schema:
                $ref: '#/wallet/schemas/Responses_getReceiptInResentActivity'

  #12.1.2
  /api/wallet/getResentActivityOfWallet:
    post:
      description: \#12.1.2 wallet getResentActivityOfWallet
      operationId: wallet_getResentActivityOfWallet
      tags:
        - "Wallet"
      parameters:
        - in: "body"
          name: "body"
          required: false

      responses:
        '200':
          description: getResentActivityOfWallet response
          content:
            application/json:
              schema:
                $ref: '#/wallet/schemas/Responses_getResentActivityOfWallet'

  #12.1.3
  /api/wallet/getWalletInfo:
    post:
      description: \#12.1.3 wallet getWalletInfo
      operationId: wallet_getWalletInfo
      tags:
        - "Wallet"
      parameters:
        - in: "body"
          name: "body"
          required: false

      responses:
        '200':
          description: getWalletInfo response
          content:
            application/json:
              schema:
                $ref: '#/wallet/schemas/Responses_getWalletInfo'

  #12.1.4
  /api/wallet/getCurrentBalanceOfBuyer:
    post:
      description: \#12.1.4 wallet getCurrentBalanceOfBuyer
      operationId: wallet_getCurrentBalanceOfBuyer
      tags:
        - "Wallet"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/wallet/schemas/Request_getCurrentBalanceOfBuyer'
      responses:
        '200':
          description: getCurrentBalanceOfBuyer response
          content:
            application/json:
              schema:
                $ref: '#/wallet/schemas/Responses_getCurrentBalanceOfBuyer'

  #12.1.5
  /api/wallet/getTransactionReceipt:
    post:
      description: \#12.1.5 wallet getTransactionReceipt
      operationId: wallet_getTransactionReceipt
      tags:
        - "Wallet"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/wallet/schemas/Request_getTransactionReceipt'
      responses:
        '200':
          description: getTransactionReceipt response
          content:
            application/json:
              schema:
                $ref: '#/wallet/schemas/Responses_getTransactionReceipt'

  #12.1.6
  /api/wallet/getIPFScidByTransactionHash:
    post:
      description: \#12.1.7 wallet getIPFScidByTransactionHash
      operationId: wallet_getIPFScidByTransactionHash
      tags:
        - "Wallet"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/wallet/schemas/Request_getIPFScidByTransactionHash'
      responses:
        '200':
          description: getIPFScidByTransactionHash response
          content:
            application/json:
              schema:
                $ref: '#/wallet/schemas/Responses_getIPFScidByTransactionHash'

#------------------------------------- schemas ---------------------------------

contacts:
  schemas:
    #1.1.1
    Request_generate:
      type: object
      properties:
        buyer:
          type: string
        seller:
          type: string
        uses:
          type: string
        expire:
          type: string

    Responses_generate:
      required:
      properties:
        type: !anything

    #1.1.2
    Request_add:
      type: object
      properties:
        issuer:
          type: object
          properties:
            id:
              type: string

    Responses_add:
      required:
      properties:
        msg:
          type: string
          enum: ["okay"]

    Error_add:
      required:
        type: string

    #1.1.3
    Request_getContactList:
      type: object
      properties:
        id:
          type: integer
          format: int64

    Responses_getContactList:
      required:
      properties:
        err:
          type: integer
          format: int32
        msg:
          type: array
          items:
            type: object
            properties: 
              remote_origin:
                type: string
              remote_member_uuid:
                type: string
              remote_membername:
                type: string
              remote_organization:
                type: object
                properties: 
                  name:
                    type: string
                  postcode:
                    type: string
                  address:
                    type: string
                  building:
                    type: string
                  department:
                    type: string
              local_to_remote:
                type: string
              remote_to_local:
                type: string
              created_on:
                type: date-time


invoice:
  #2.1
  schemas:
    #2.1.1
    Request_returnToSender:
      type: object
      properties:
        id:
          type: integer
          format: int64
    Responses_returnToSender:
      required:
        err:
          type: integer
          format: int32
        msg:
          type: string
    Error_returnToSender:
      $ref: '#/error/schemas/Responses_err_msg'
      
    #2.1.2
    Request_confirm:
      type: object
      properties:
        id:
          type: integer
          format: int64
    Responses_confirm:
      required:
        err:
          type: integer
          format: int32
        msg:
          type: string
    Error_confirm:
      $ref: '#/error/schemas/Responses_err_msg'

    #2.1.3
    Request_unconfirm:
      type: object
      properties:
        id:
          type: integer
          format: int64
    Responses_unconfirm:
      required:
        err:
          type: integer
          format: int32
        msg:
          type: string
    Error_unconfirm:
      $ref: '#/error/schemas/Responses_err_msg'

    #2.1.4
    Request_makePayment:
      type: object
      properties:
        id:
          type: integer
          format: int64
    Responses_makePayment:
      required:
        err:
          type: integer
          format: int32
        msg:
          type: string
    Error_makePayment:
      $ref: '#/error/schemas/Responses_err_msg'

    #2.2.1
    Request_getDocumentBuyer:
      type: object
      properties:
        id:
          type: integer
          format: int64
    Responses_getDocumentBuyer:
      required:
        err:
          type: integer
          format: int32
        msg:
          type: string

    #2.2.2
    Request_getDocumentSeller:
      type: object
      properties:
        id:
          type: integer
          format: int64
    Responses_getDocumentSeller:
      required:
        err:
          type: integer
          format: int32
        msg:
          type: string

    #2.2.3
    Request_getArchiveDocumentBuyer:
      type: object
      properties:
        id:
          type: integer
          format: int64
    Responses_getArchiveDocumentBuyer:
      required:
        err:
          type: integer
          format: int32
        msg:
          type: string

    #2.2.4
    Request_getArchiveDocumentSeller:
      type: object
      properties:
        id:
          type: integer
          format: int64
    Responses_getArchiveDocumentSeller:
      required:
        err:
          type: integer
          format: int32
        msg:
          type: string


    #2.4.1
    Request_update:
      type: object
      properties:
        id:
          type: integer
          format: int64
    Responses_update:
      required:
        err:
          type: integer
          format: int32
        msg:
          type: string
    Error_update:
      $ref: '#/error/schemas/Responses_err_msg'

    #2.4.2
    Request_getDraftDocument:
      type: object
      properties:
        id:
          type: integer
          format: int64
    Responses_getDraftDocument:
      required:
        err:
          type: integer
          format: int32
        msg:
          type: string
    Error_getDraftDocument:
      $ref: '#/error/schemas/Responses_err_msg'

    #2.4.3
    Request_getDocument:
      type: object
      properties:
        id:
          type: integer
          format: int64
    Responses_getDocument:
      required:
      properties:
        err:
          type: integer
          format: int32
        msg:
          type: string
    Error_getDocument:
      $ref: '#/error/schemas/Responses_err_msg'

    #2.4.4
    Request_getArchiveDocument:
      type: object
      properties:
        id:
          type: integer
          format: int64
    Responses_getArchiveDocument:
      required:
      properties:
        err:
          type: integer
          format: int32
        msg:
          type: string
    Error_getArchiveDocument:
      $ref: '#/error/schemas/Responses_err_msg'

    #2.4.5
    Request_create:
      type: object
      properties:
        id:
          type: integer
          format: int64

    Responses_create:
      required:
      properties:
        err:
          type: integer
          format: int32
        msg:
          type: string
    Error_create:
      $ref: '#/error/schemas/Responses_err_msg'

    #2.5.1
    Request_send:
      type: object
      properties:
        id:
          type: integer
          format: int64

    Responses_send:
      required:
      properties:
        err:
          type: integer
          format: int32
        msg:
          type: string
    Error_send:
      $ref: '#/error/schemas/Responses_err_msg'

    #2.5.2
    Request_recreate:
      type: object
      properties:
        id:
          type: integer
          format: int64

    Responses_recreate:
      required:
      properties:
        err:
          type: integer
          format: int32
        msg:
          type: string
    Error_recreate:
      $ref: '#/error/schemas/Responses_err_msg'

    #2.5.3
    Request_withdraw:
      type: object
      properties:
        id:
          type: integer
          format: int64

    Responses_withdraw:
      required:
      properties:
        err:
          type: integer
          format: int32
        msg:
          type: string
    Error_withdraw:
      $ref: '#/error/schemas/Responses_err_msg'

    #2.6.1
    Request_trashDraft:
      type: object
      properties:
        id:
          type: integer
          format: int64

    Responses_trashDraft:
      required:
      properties:
        err:
          type: integer
          format: int32
        msg:
          type: string
    Error_trashDraft:
      $ref: '#/error/schemas/Responses_err_msg'

    #2.6.2
    Request_trash:
      type: object
      properties:
        id:
          type: integer
          format: int64

    Responses_trash:
      required:
      properties:
        err:
          type: integer
          format: int32
        msg:
          type: string
    Error_trash:
      $ref: '#/error/schemas/Responses_err_msg'

    #2.7.1
    Request_softDeleteSeller:
      type: object
      properties:
        id:
          type: integer
          format: int64

    Responses_softDeleteSeller:
      required:
      properties:
        err:
          type: integer
          format: int32
        msg:
          type: string

    #2.7.2
    Request_softDeleteBuyer:
      type: object
      properties:
        id:
          type: integer
          format: int64

    Responses_softDeleteBuyer:
      required:
      properties:
        err:
          type: integer
          format: int32
        msg:
          type: string


invite:
  #3.1
  schemas:
    #3.1.1
    Request_create:
      type: object
      properties:
        buyer:
          type: string
        seller:
          type: string

    Responses_create:
      required:
      properties:
        err:
          type: integer
          format: int32
        msg:
          type: object
          properties:
            invite_code:
              type: string
            local_member_uuid:
              type: string
            rel_buyer:
              type: string
            rel_seller:
              type: string
            max_count:
              type: integer
              format: int32

    #3.1.2
    Responses_list:
      $ref: '#/invite/schemas/Responses_create'

    #3.1.3
    Request_submit:
      type: object
      properties:
        code:
          type: string

    Responses_submit:
      required:
      properties:
        err:
          type: integer
          format: int32
        msg:
          type: string

    #3.1.4
    Request_contacts:
      type: object
      properties:
        contactType:
          type: string

    Responses_contacts:
      required:
      properties:
        err:
          type: integer
          format: int32
        msg:
          type: array
          items:
            type: object
            properties: 
              remote_origin:
                type: string
              member_uuid:
                type: string
              membername:
                type: string
              organization_name:
                type: string
              organization_address:
                type: string
              organization_building:
                type: string
              organization_department:
                type: string
              organization_tax_id:
                type: string
              addressCountry:
                type: string
              addressRegion:
                type: string
              addressCity:
                type: string
              wallet_address:
                type: string

    #3.1.5
    Request_status:
      type: object
      properties:
        code:
          type: string

    Responses_status:
      required:
      properties:
        err:
          type: integer
          format: int32
        msg:
          type: object
          properties:
            invite:
              type: string
            host:
              type: string
            session:
              type: object
              properties:
                member_uuid:
                  type: string
                organization_name:
                  type: string
                organization_postcode:
                  type: string
                organization_address:
                  type: string
                organization_building:
                  type: string
                organization_department:
                  type: string
                organization_tax_id:
                  type: string
                addressCountry:
                  type: string
                addressRegion:
                  type: string
                addressCity:
                  type: string

    #3.1.6
    Request_remove:
      type: object
      properties:
        invite_code:
          type: string

    Responses_remove:
      required:
      properties:
        err:
          type: integer
          format: int32
        msg:
          type: string
          enum: ["okey"]

session:
  #6.1
  schemas:
    #6.1.1
    Request_logout:
      type: object
      required:
        properties:
          id:
            type: integer
            format: int64

    Responses_logout:
      302:
        description: Redirect
        responseParameters:
          - in: query
            name: status
            description: the status of the instalation
            schema:
              oneOf:
                - type: string
                  example: success
                  description: When the installation was successful
                - type: string
                  example: error
                  description: When the installation was erroneous
        headers:
          location:
            description: Setup state based redirect
            schema:
              oneOf:
                - type: string
                  description: If setup is done and valid for installation id, will
                    redirect to given redirect url
                - type: string
                  description: If no setup exist for installation id, will redirect to
                    SumUp oauth page
                - type: string
                  description: If error during authorization with SumUpl, e.g. non
                    matching editions, will redirect to a setup page for
                    further user action

    #6.1.2
    Responses_check:
      required:
      properties:
        member_uuid:
          type: string
        organization_name:
          type: string
        organization_postcode:
          type: string
        organization_address:
          type: string
        organization_building:
          type: string
        organization_department:
          type: string
        organization_tax_id:
          type: string
        addressCountry:
          type: string
        addressRegion:
          type: string
        addressCity:
          type: string

    #6.1.3
    Request_updateCompany:
      type: object
      properties:
        id:
          type: integer
          format: int64

    Responses_updateCompany:
      required:
      properties:
        err:
          type: integer
          format: int32
        msg:
          type: string
          enum: ["okey"]

    #6.1.4
    Request_updateProfile:
      type: object
      properties:
        id:
          type: integer
          format: int64

    Responses_updateProfile:
      $ref: '#/session/schemas/Responses_updateCompany'

    #6.1.5
    Request_login:
      type: object
      properties:
        membername:
          type: string
        password:
          type: string

    Responses_login:
      $ref: '#/session/schemas/Responses_updateCompany'

    #6.1.6
    Request_signup:
      type: object
      properties:
        member_did:
          type: string
        member.membername:
          type: string
        member.job_title:
          type: string
        member.contact_email:
          type: string
        password_hash:
          type: string
        company.name:
          type: string
        company.department:
          type: string
        company.tax_id:
          type: string
        address.country:
          type: string
        address.region:
          type: string
        address.postcode:
          type: string
        address.city:
          type: string
        address.line1:
          type: string
        address.line2:
          type: string

    Responses_signup:
      required:
      properties:
        err:
          type: integer
          format: int32
        msg:
          type: string

    Error_signup:
      $ref: '#/error/schemas/Responses_err_msg'

settings:
  #7.1
  schemas:
    #7.1.1
    Request_setProfileImage: #ok
      type: object
      properties:
        dataUrl:
          type: string

    Responses_setProfileImage:
      required:
      properties:
        err:
          type: integer
          format: int32
        msg:
          type: string
          enum: ["okey"]

    #7.1.2
    Request_setCompanyLogo: #ok
      type: object
      properties:
        dataUrl:
          type: string

    Responses_setCompanyLogo:
      $ref: '#/settings/schemas/Responses_setProfileImage'

    #7.1.3
    Request_getProfileImage:
      type: object
      properties:
        data:
          type: object
          properties:
            avatar_uuid:
            type: string

    Responses_getProfileImage: #ok
      required:
      properties:
        err:
          type: integer
          format: int32
        msg:
          type: object
          properties:
            row:
              type: object
              properties:
                dataUrl:
                  type: string
                  format: byte

    #7.1.4
    Request_getCompanyLogo: #ok
      type: object
      properties:
        data:
          type: object
          properties:
            logo_uuid:
              type: string

    Responses_getCompanyLogo:
      $ref: '#/settings/schemas/Request_getProfileImage'

tray:
  #9.1
  schemas:
    #9.1.1
    Request_getCountBuyer:
      $ref: '#/tray/schemas/Request_getTotalBuyer'

    Responses_getCountBuyer:
      required:
      properties:
        document_uuid:
          type: string
        document_type:
          type: string
        document_number:
          type: string
        document_folder:
          type: string
        seller_uuid:
          type: string
        seller_membername:
          type: string
        seller_organization:
          type: string
        seller_archived:
          type: string
        seller_last_action: date
        buyer_uuid:
          type: string
        buyer_membername:
          type: string
        buyer_organization:
          type: string
        buyer_archived:
          type: string
        buyer_last_action:
          type: string
        created_from:
          type: string
        root_document:
          type: string
        created_on:
          type: date-time
        opened:
          type: string
        subject_line:
          type: string
        due_by:
          type: date-time
        amount_due:
          type: integer
          format: int32

    #9.1.2
    Request_getCountSeller:
      $ref: '#/tray/schemas/Request_getTotalBuyer'

    Responses_getCountSeller:
      $ref: '#/tray/schemas/Responses_getCountBuyer'

    #9.1.3
    Request_getFolderBuyer:
      type: object
      properties:
        archive:
          type: string
        role:
          type: string
        folder:
          type: string
        type:
          type: string
        key: 
          - type: string
              

    Responses_getFolderBuyer: #contacts/ng
      required:
      properties:
        err:
          type: integer
          format: int32
        msg:
          - properties:
            

    #9.1.4
    Request_getFolderSeller:
      $ref: '#/tray/schemas/Request_getFolderBuyer'

    Responses_getFolderSeller:
      $ref: '#/tray/schemas/Responses_getFolderBuyer'

    #9.1.5
    Request_getTotalBuyer: #ok
      type: object
      properties:
        archive:
          type: string
        role:
          type: string
        folder:
          type: string
        type:
          type: string

    Responses_getTotalBuyer:
      required:
      properties:
        err:
          type: integer
          format: int32
        msg:
          type: string

    #9.1.6
    Request_getTotalSeller:
      $ref: '#/tray/schemas/Request_getTotalBuyer'

    Responses_getTotalSeller:
      $ref: '#/tray/schemas/Responses_getTotalBuyer'


trayArchive:
  #10.1
  schemas:
    #10.1.1
    Request_getCountBuyer:
      $ref: '#/trayArchive/schemas/Request_getTotalBuyer'

    Responses_getCountBuyer:
      required:
      properties:
        document_uuid:
          type: string
        document_type:
          type: string
        document_number:
          type: string
        document_folder:
          type: string
        seller_uuid:
          type: string
        seller_membername:
          type: string
        seller_organization:
          type: string
        seller_archived:
          type: string
        seller_last_action:
          type: date-time
        buyer_uuid:
          type: string
        buyer_membername:
          type: string
        buyer_organization:
          type: string
        buyer_archived:
          type: string
        buyer_last_action:
          type: string
        created_from:
          type: string
        root_document:
          type: string
        created_on:
          type: date-time
        opened:
          type: string
        subject_line:
          type: string
        due_by:
          type: date-time
        amount_due:
          type: integer
          format: int32

    #10.1.2
    Request_getCountSeller:
      $ref: '#/trayArchive/schemas/Request_getTotalBuyer'

    Responses_getCountSeller:
      $ref: '#/trayArchive/schemas/Responses_getCountBuyer'

    #10.1.3
    Request_getFolderBuyer:
      type: object
      properties:
        archive:
          type: string
        role:
          type: string
        folder:
          type: string
        type:
          type: string
        key: 
          - type: string
              

    Responses_getFolderBuyer: #ng
      required:
      properties:
        err:
          type: integer
          format: int32
        msg:
          - properties:
            

    #10.1.4
    Request_getFolderSeller:
      $ref: '#/trayArchive/schemas/Request_getFolderBuyer'

    Responses_getFolderSeller:
      $ref: '#/trayArchive/schemas/Responses_getFolderBuyer'

    #10.1.5
    Request_getTotalBuyer: #ok
      type: object
      properties:
        archive:
          type: string
        role:
          type: string
        folder:
          type: string
        type:
          type: string

    Responses_getTotalBuyer:
      required:
      properties:
        err:
          type: integer
          format: int32
        msg:
          type: string

    #10.1.6
    Request_getTotalSeller:
      $ref: '#/trayArchive/schemas/Request_getTotalBuyer'

    Responses_getTotalSeller:
      $ref: '#/trayArchive/schemas/Responses_getTotalBuyer'

trayDraft:
  #11.1
  schemas:
    #11.1.1
    Request_getCountSeller:
      $ref: '#/trayArchive/schemas/Request_getTotalBuyer'

    Responses_getCountSeller:
      required:
      properties:
        document_uuid:
          type: string
        document_type:
          type: string
        document_number:
          type: string
        document_folder:
          type: string
        seller_uuid:
          type: string
        seller_membername:
          type: string
        seller_organization:
          type: string
        seller_archived:
          type: string
        seller_last_action:
          type: date-time
        buyer_uuid:
          type: string
        buyer_membername:
          type: string
        buyer_organization:
          type: string
        buyer_archived:
          type: string
        buyer_last_action:
          type: string
        created_from:
          type: string
        root_document:
          type: string
        created_on:
          type: date-time
        opened:
          type: string
        subject_line:
          type: string
        due_by:
          type: date-time
        amount_due:
          type: integer
          format: int32

    #11.1.2
    Request_getFolderSeller:
      type: object
      properties:
        archive:
          type: string
        role:
          type: string
        folder:
          type: string
        type:
          type: string
        key: 
          - type: string
              

    Responses_getFolderBuyer: #ng
      required:
      properties:
        err:
          type: integer
          format: int32
        msg:
          - properties:
            
    #11.1.3
    Request_getTotalSeller: #ok
      type: object
      properties:
        archive:
          type: string
        role:
          type: string
        folder:
          type: string
        type:
          type: string

    Responses_getTotalBuyer:
      required:
      properties:
        err:
          type: integer
          format: int32
        msg:
          type: string

wallet:
  #12.1
  schemas:

    #12.1.1
    Request_getReceiptInResentActivity: #ok
      type: object
      properties:
        settlement_hash:
          type: string

    Responses_getReceiptInResentActivity:
      $ref: '#/wallet/schemas/Responses_getTransactionReceipt'

    #12.1.2
    Responses_getResentActivityOfWallet: #ok
      required:
      properties:
        err:
          type: integer
          format: int32
        msg:
          type: object
          properties:
            activity:
              type: array
              items:
                type: object
                properties: 
                  document_uuid:
                    type: string
                  document_json:
                    type: string
                  settlement_hash:
                    type: string
                  settlement_time:
                    type: string
                  type:
                    type: string
                    enum: ["Sale","Purchase"]
                  amount:
                    type: integer
                    format: int32

    #12.1.3
    Responses_getWalletInfo:
      required:
      properties:
        err:
          type: integer
          format: int32
        msg:
          type: object
          properties:
            balanceGwei:
              type: string
            accountAddress:
              type: string
            networkType:
              type: string
            chainId:
              type: string

    #12.1.4
    Request_getCurrentBalanceOfBuyer: #ok
      type: object
      properties:
        properties:
          document_uuid:
            type: string

    Responses_getCurrentBalanceOfBuyer:
      required:
      properties:
        err:
          type: integer
          format: int32
        msg:
          type: object
          properties:
            transaction_result:
              type: object
              properties:
                balanceGwei:
                  type: string
                makePaymantTo:
                  type: string
                transferCost:
                  type: string
                gas:
                  type: string
                endBalance:
                  type: string

    #12.1.5
    Request_getTransactionReceipt: #ok
      type: object
      properties:
        document_uuid:
          type: string
        role:
          type: string
          enum: ["buyer","seller"]
        archive:
          type: integer
          format: int64

    Responses_getTransactionReceipt:
      required:
      properties:
        err:
          type: integer
          format: int32
        msg:
          type: object
          properties:
            receipt:
              type: object
              properties:
                status:
                  type: "boolean"
                  default: true
                transactionHash:
                  contractAddress:
                transactionIndex:
                  type: integer
                  format: int64
                blockHash:
                  contractAddress:
                blockNumber:
                  type: integer
                  format: int64
                contractAddress:
                  type: string
                cumulativeGasUsed:
                  type: integer
                  format: int64
                gasUsed:
                  type: integer
                  format: int64
                logs:
                  - {  }

    #12.1.6
    Request_getIPFScidByTransactionHash: #ok
      type: object
      properties:
        transactionHash:
          type: string

    Responses_getIPFScidByTransactionHash:
      properties:
        err:
          type: integer
          format: int32
        msg:
          type: object
          properties:
            ipfs_cid:
              type: string
            ipfs_address:
              type: string

error:
  schemas:
    Responses_err_msg:
      type: object
      required:
        - err
        - msg
      properties:
        err:
          type: integer
          format: int32
        msg:
          type: string

# security
security: []
